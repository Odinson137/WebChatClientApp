<UserControl  x:Class="WebChatClientApp.Views.ChatMenuView"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:WebChatClientApp.Views"
      xmlns:controllers="clr-namespace:WebChatClientApp.ViewModels" 
      xmlns:recontrolls="clr-namespace:WebChatClientApp.Views.ReControls" 
      xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
      xmlns:converters="clr-namespace:WebChatClientApp.Converters" mc:Ignorable="d"
      Width="800" Height="600"        >

    <UserControl.DataContext>
        <controllers:ChatMenuViewModel/>
    </UserControl.DataContext>

    <UserControl.Resources>
        <Color x:Key="LightBlueColor">#268e9c</Color>
        <Color x:Key="LightPurpleColor">#cfaaf3</Color>
        <Color x:Key="TextColorBlue">#0e9eb7</Color>
        <Color x:Key="BlackColor">#222222</Color>

        <SolidColorBrush x:Key="LightBlueColorBrush">#268e9c</SolidColorBrush>
        <SolidColorBrush x:Key="LightPurpleColorBrush">#cfaaf3</SolidColorBrush>
        <SolidColorBrush x:Key="TextColorBrushBlue">#0e9eb7</SolidColorBrush>
        <SolidColorBrush x:Key="BlackColorBrush">#222222</SolidColorBrush>

        <converters:TextAlignment x:Key="TextAlignment"/>
        <converters:TimeConverter x:Key="TimeConverter"/>
        <converters:ChangeTypeMenu x:Key="ChangeTypeMenu"/>

        <Style TargetType="ListBoxItem">
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <ContentPresenter/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="AnimatedGridStyle" TargetType="Grid">
            <Setter Property="Width" Value="100"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="Width" To="120" Duration="0:0:0.3" />
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="Width" To="100" Duration="0:0:0.3" />
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
            </Style.Triggers>
        </Style>

        <DataTemplate x:Key="listTemplate">
            <StackPanel Margin="5">
                <Image Width="100" Height="75" Source="{Binding Path=ImagePath}" />
                <TextBlock FontSize="16" Text="{Binding Path=Title}" HorizontalAlignment="Center" />
                <TextBlock FontSize="16" Text="{Binding Path=Company}" HorizontalAlignment="Center" />
            </StackPanel>
        </DataTemplate>
        <ItemsPanelTemplate x:Key="listPanelTemplate">
            <WrapPanel />
        </ItemsPanelTemplate>

    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="35"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Grid Grid.Column="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="200"/>
            </Grid.ColumnDefinitions>
        </Grid>

        <StackPanel Orientation="Horizontal">
            <Border Width="60" Height="35"
                        BorderBrush="Gray" VerticalAlignment="Bottom">
                <Border.Background>
                    <SolidColorBrush Color="#353535"/>
                </Border.Background>
                <TextBlock FontSize="14" Foreground="White" VerticalAlignment="Center" 
                               HorizontalAlignment="Center" Text="Home"/>

                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseDown">
                        <i:InvokeCommandAction 
                            Command="{Binding DataContext.SwitchToPage1Command, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Border>
            <Border Width="30">
                <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="20" Foreground="White">+</TextBlock>
            </Border>
        </StackPanel>

        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="25*"/>
                <ColumnDefinition Width="50*"/>
                <ColumnDefinition Width="25*"/>
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <RowDefinition Height="50"/>
                <RowDefinition/>
            </Grid.RowDefinitions>

            <StackPanel Orientation="Horizontal" x:Name="SelectFriendsOrChats" Grid.Row="0" Grid.Column="0">
                <TextBlock x:Name="Chats" Text="Chats" Width="100" TextAlignment="Center"
                        VerticalAlignment="Center" HorizontalAlignment="Center"
                        Foreground="White" FontSize="16">

                    <TextBlock.Style>
                        <Style TargetType="TextBlock">
                            <Setter Property="Opacity" Value="0.4"/>
                            <Setter Property="IsEnabled" Value="True"/>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Opacity" Value="1"/>
                                </Trigger>

                                <DataTrigger Binding="{Binding SelectedMenu}" Value="0">
                                    <Setter Property="Opacity" Value="1"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseDown">
                            <i:InvokeCommandAction 
                                Command="{Binding ChangeMenu}"
                                CommandParameter="0"
                                />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </TextBlock>

                <Grid Background="Black" Width="1" Height="30" Opacity="0.4">
                    <CheckBox Visibility="Hidden" x:Name="SelectMenu" IsChecked="False">

                    </CheckBox>
                </Grid>

                <TextBlock x:Name="Friends" Text="Friends" Width="100" TextAlignment="Center"
                        VerticalAlignment="Center" HorizontalAlignment="Center"
                        Foreground="White" FontSize="16" >

                    <TextBlock.Style>
                        <Style TargetType="TextBlock">
                            <Setter Property="Opacity" Value="0.4"/>
                            <Setter Property="IsEnabled" Value="True"/>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Opacity" Value="1"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseDown">
                            <i:InvokeCommandAction 
                                Command="{Binding ChangeMenu}"
                                CommandParameter="1"
                                />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </TextBlock>
            </StackPanel>

            <Grid x:Name="TitleMenu" HorizontalAlignment="Center" Grid.Column="0" Grid.ColumnSpan="3">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>

                <Border Grid.Column="0" Width="100">
                    <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" 
                               FontSize="18" Text="Add" >
                        <TextBlock.Foreground>
                            <SolidColorBrush Color="White"/>
                        </TextBlock.Foreground>
                        <TextBlock.Style>
                            <Style TargetType="TextBlock">
                                <Setter Property="Opacity" Value="0.4"/>
                                <Style.Triggers>
                                    <EventTrigger RoutedEvent="MouseEnter">
                                        <EventTrigger.Actions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Duration="0:0:0.300" Storyboard.TargetProperty="Opacity" To="1"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger.Actions>
                                    </EventTrigger>
                                    <EventTrigger RoutedEvent="MouseLeave">
                                        <EventTrigger.Actions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Duration="0:0:0.300" Storyboard.TargetProperty="Opacity" To="0.4"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger.Actions>
                                    </EventTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseDown">
                                <i:InvokeCommandAction 
                                    Command="{Binding CreateNewChat}"
                                    CommandParameter="{Binding ElementName=ChatTitle, Path=Text}"
                                    />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </TextBlock>
                </Border>

                <TextBox x:Name="ChatTitle" MinHeight="50" Grid.Column="1" MinWidth="20" 
                         Text="{Binding Chat.Title, Mode=OneWay}" Foreground="White"
                         SelectionTextBrush="{DynamicResource LightPurpleColorBrush}"
                         FontSize="18" Background="{x:Null}" SelectionOpacity="1" 
                         BorderBrush="{x:Null}" CaretBrush="{DynamicResource LightBlueColorBrush}"
                         VerticalAlignment="Center" AcceptsTab="True" AutoWordSelection="True"
                         FocusVisualStyle="{x:Null}" BorderThickness="0" Padding="5" AcceptsReturn="True" 
                         VerticalContentAlignment="Center">
                    <TextBox.SelectionBrush>
                        <SolidColorBrush Color="#FFCFAAF3" Opacity="0.4"/>
                    </TextBox.SelectionBrush>
                </TextBox>

                <Border Grid.Column="2" Width="100">
                    <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" 
                               FontSize="18" Text="Rename">
                        <TextBlock.Foreground>
                            <SolidColorBrush Color="White"/>
                        </TextBlock.Foreground>
                        <TextBlock.Style>
                            <Style TargetType="TextBlock">
                                <Setter Property="Opacity" Value="0.4"/>
                                <Style.Triggers>
                                    <EventTrigger RoutedEvent="MouseEnter">
                                        <EventTrigger.Actions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Duration="0:0:0.300" Storyboard.TargetProperty="Opacity" To="1"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger.Actions>
                                    </EventTrigger>
                                    <EventTrigger RoutedEvent="MouseLeave">
                                        <EventTrigger.Actions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Duration="0:0:0.300" Storyboard.TargetProperty="Opacity" To="0.4"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger.Actions>
                                    </EventTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseDown">
                                <i:InvokeCommandAction 
                                    Command="{Binding RenameChat}"
                                    CommandParameter="{Binding ElementName=ChatTitle, Path=Text}"
                                    />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </TextBlock>
                </Border>

            </Grid>

            <Grid x:Name="SelectedChatMenu" Grid.Row="1" Grid.Column="0">
                <ListView ItemsSource="{Binding Chats}" SelectedItem="{Binding Chat}" 
                          Visibility="{Binding SelectedMenu, Converter={StaticResource ChangeTypeMenu}, ConverterParameter=0}"
                          BorderBrush="{x:Null}" FontSize="20" Background="{x:Null}">
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <Grid HorizontalAlignment="Right">
                                <TextBlock TextAlignment="Left" Foreground="White" Text="{Binding Title}" TextWrapping="Wrap"/>
                            </Grid>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>

                <ListView ItemsSource="{Binding Friends}" 
                          Visibility="{Binding SelectedMenu, Converter={StaticResource ChangeTypeMenu}, ConverterParameter=1}"
                          BorderBrush="{x:Null}" FontSize="20" Background="{x:Null}">
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <Grid HorizontalAlignment="Right">
                                <TextBlock TextAlignment="Left" Foreground="White" Text="{Binding}" TextWrapping="Wrap"/>
                            </Grid>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>

            </Grid>

            <Grid Grid.Row="1" Grid.Column="1" Margin="0 0 0 50" x:Name="GridForData">
                <recontrolls:AutoScrollListBox VerticalAlignment="Stretch" 
                                               ScrollViewer.VerticalScrollBarVisibility="Hidden" 
                                               ScrollViewer.HorizontalScrollBarVisibility="Hidden" 
                                               Background="{x:Null}" BorderBrush="{x:Null}"
                                               ItemsSource="{Binding Chat.Messages}"  
                                               Width="Auto" Height="Auto" BorderThickness="0">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <Border CornerRadius="15" Margin="5 4" MaxWidth="360">
                                <Border.Background>
                                    <SolidColorBrush Color="{StaticResource BlackColor}" Opacity="0.6"/>
                                </Border.Background>
                                <Border.HorizontalAlignment>
                                    <MultiBinding Converter="{StaticResource TextAlignment}">
                                        <Binding Path="UserID"/>
                                        <Binding Path="DataContext.User.UserID" ElementName="GridForData"/>
                                    </MultiBinding>
                                </Border.HorizontalAlignment>
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <TextBlock Grid.Row="0" Width="Auto" Foreground="White" Text="{Binding Text}" 
                                           TextWrapping="Wrap" FontSize="20"
                                           Margin="10 5" HorizontalAlignment="Right"/>
                                    <TextBlock Grid.Row="1" Opacity="0.7" Foreground="White" Padding="5 -5 5 5"
                                           Text="{Binding SendTime, Converter={StaticResource TimeConverter}}" 
                                           HorizontalAlignment="Right"/>
                                </Grid>

                            </Border>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </recontrolls:AutoScrollListBox>
            </Grid>

            <Border x:Name="TextMessageBoxMenu" Grid.Row="1" Background="{StaticResource BlackColorBrush}"
                    Grid.Column="1" VerticalAlignment="Bottom" Margin="0 0 0 20"
                    CornerRadius="12">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="85*"/>
                        <ColumnDefinition Width="15*"/>
                    </Grid.ColumnDefinitions>

                    <TextBox x:Name="MessageBox" MinHeight="50"
                         SelectionTextBrush="{DynamicResource LightPurpleColorBrush}"
                         FontSize="18" Background="{x:Null}" SelectionOpacity="1" 
                         BorderBrush="{x:Null}" CaretBrush="{DynamicResource LightPurpleColorBrush}"
                         VerticalAlignment="Center" AcceptsTab="True" AutoWordSelection="True" TextWrapping="Wrap"
                         FocusVisualStyle="{x:Null}" BorderThickness="0" Padding="5" AcceptsReturn="True" 
                         VerticalContentAlignment="Center">
                        <TextBox.Style>
                            <Style TargetType="{x:Type TextBox}">
                                <Setter Property="TextBox.SelectionBrush">
                                    <Setter.Value>
                                        <SolidColorBrush Color="#FFCFAAF3" Opacity="0.40"/>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="IsFocused" Value="True">
                                        <Setter Property="Foreground">
                                            <Setter.Value>
                                                <SolidColorBrush Color="White" Opacity="1"/>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="Text" Value=""/>
                                    </Trigger>
                                    <Trigger Property="IsFocused" Value="False">
                                        <Setter Property="Foreground">
                                            <Setter.Value>
                                                <SolidColorBrush Color="White" Opacity="0.3"/>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="Text" Value="Send a message"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                    </TextBox>

                    <Border HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0 0 10 8" Grid.Column="1" Height="32" Background="White" Width="32" CornerRadius="5">
                        <Image Height="24" Source="/Views/icons8-отправлено-48 (1).png">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="MouseDown">
                                    <i:InvokeCommandAction 
                                        Command="{Binding SendMessage}"
                                        CommandParameter="{Binding ElementName=MessageBox}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </Image>
                        <Border.Style>
                            <Style TargetType="Border">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=MessageBox, Path=Text}" Value="">
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding ElementName=MessageBox, Path=Text}" Value="Send a message">
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                    </Border>
                </Grid>

            </Border>

            <Grid Grid.Row="1" Grid.Column="2">
                <Border Padding="10" CornerRadius="15" 
                        HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="0 0 0 25">
                    <Border.Background>
                        <SolidColorBrush Color="#FF222222" Opacity="0.6"/>
                    </Border.Background>
                    <TextBlock Text="Delete chat" Foreground="White" FontSize="18">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseDown">
                                <i:InvokeCommandAction 
                                    Command="{Binding DeleteChat}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </TextBlock>
                </Border>

            </Grid>

        </Grid>

        <i:Interaction.Triggers>
            <i:EventTrigger EventName="Loaded">
                <i:InvokeCommandAction 
                    Command="{Binding LoadingCommand}"
                    CommandParameter="{Binding DataContext.User, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                    />
            </i:EventTrigger>
        </i:Interaction.Triggers>

        <!--<ContentControl Content="{Binding SelectedViewModel}"/>-->
    </Grid>
</UserControl>
